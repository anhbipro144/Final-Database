// <auto-generated />
using System;
using Final.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Final.Migrations
{
    [DbContext(typeof(FinalContext))]
    [Migration("20221227133022_init")]
    partial class init
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.1")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Final.Models.Customer", b =>
                {
                    b.Property<int>("customerId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("customerId"));

                    b.Property<int>("personId")
                        .HasColumnType("int");

                    b.HasKey("customerId");

                    b.HasIndex("personId");

                    b.ToTable("Customers");

                    b.HasData(
                        new
                        {
                            customerId = 1,
                            personId = 1
                        },
                        new
                        {
                            customerId = 2,
                            personId = 2
                        },
                        new
                        {
                            customerId = 3,
                            personId = 3
                        });
                });

            modelBuilder.Entity("Final.Models.EmployedAt", b =>
                {
                    b.Property<int>("staffId")
                        .HasColumnType("int");

                    b.Property<int>("retailId")
                        .HasColumnType("int");

                    b.Property<int?>("RetailChainretailId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("employedSince")
                        .IsRequired()
                        .HasColumnType("datetime2");

                    b.Property<string>("role")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("staffId", "retailId");

                    b.HasIndex("RetailChainretailId");

                    b.ToTable("EmployedAts");

                    b.HasData(
                        new
                        {
                            staffId = 1,
                            retailId = 1,
                            employedSince = new DateTime(2022, 12, 27, 20, 30, 22, 420, DateTimeKind.Local).AddTicks(3187),
                            role = "Manager"
                        },
                        new
                        {
                            staffId = 2,
                            retailId = 2,
                            employedSince = new DateTime(2022, 12, 27, 20, 30, 22, 420, DateTimeKind.Local).AddTicks(3197),
                            role = "Staff"
                        },
                        new
                        {
                            staffId = 3,
                            retailId = 3,
                            employedSince = new DateTime(2022, 12, 27, 20, 30, 22, 420, DateTimeKind.Local).AddTicks(3198),
                            role = "Cashier"
                        });
                });

            modelBuilder.Entity("Final.Models.Inventory", b =>
                {
                    b.Property<int>("inventoryId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("inventoryId"));

                    b.Property<int?>("available")
                        .HasColumnType("int");

                    b.Property<DateTime?>("lastUpdated")
                        .HasColumnType("datetime2");

                    b.Property<int>("productId")
                        .HasColumnType("int");

                    b.Property<int>("retailId")
                        .HasColumnType("int");

                    b.HasKey("inventoryId");

                    b.HasIndex("productId");

                    b.ToTable("Inventories");

                    b.HasData(
                        new
                        {
                            inventoryId = 1,
                            available = 500,
                            productId = 1,
                            retailId = 1
                        },
                        new
                        {
                            inventoryId = 2,
                            available = 500,
                            productId = 2,
                            retailId = 2
                        },
                        new
                        {
                            inventoryId = 3,
                            available = 500,
                            productId = 3,
                            retailId = 3
                        });
                });

            modelBuilder.Entity("Final.Models.Order", b =>
                {
                    b.Property<int>("orderId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("orderId"));

                    b.Property<DateTime?>("createdAt")
                        .IsRequired()
                        .HasColumnType("datetime2");

                    b.Property<int>("personId")
                        .HasColumnType("int");

                    b.Property<decimal?>("subtotal")
                        .IsRequired()
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("total")
                        .IsRequired()
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("vat")
                        .IsRequired()
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("orderId");

                    b.HasIndex("personId");

                    b.ToTable("Orders");

                    b.HasData(
                        new
                        {
                            orderId = 1,
                            createdAt = new DateTime(2022, 12, 27, 20, 30, 22, 420, DateTimeKind.Local).AddTicks(3209),
                            personId = 1,
                            subtotal = 200m,
                            total = 220m,
                            vat = 20m
                        },
                        new
                        {
                            orderId = 2,
                            createdAt = new DateTime(2022, 12, 27, 20, 30, 22, 420, DateTimeKind.Local).AddTicks(3214),
                            personId = 2,
                            subtotal = 300m,
                            total = 330m,
                            vat = 30m
                        },
                        new
                        {
                            orderId = 3,
                            createdAt = new DateTime(2022, 12, 27, 20, 30, 22, 420, DateTimeKind.Local).AddTicks(3215),
                            personId = 3,
                            subtotal = 400m,
                            total = 440m,
                            vat = 40m
                        });
                });

            modelBuilder.Entity("Final.Models.Person", b =>
                {
                    b.Property<int>("personId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("personId"));

                    b.Property<string>("address")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("dateOfBirth")
                        .IsRequired()
                        .HasColumnType("datetime2");

                    b.Property<string>("email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("firstName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("gender")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("lastName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("phone")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("status")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("personId");

                    b.ToTable("Persons");

                    b.HasData(
                        new
                        {
                            personId = 1,
                            address = "312, Lac Long Quan",
                            dateOfBirth = new DateTime(2022, 12, 27, 20, 30, 22, 420, DateTimeKind.Local).AddTicks(3248),
                            email = "nbi2271@gmail.com",
                            firstName = "Neo",
                            gender = "Male",
                            lastName = "Nguyen",
                            phone = "0944565607",
                            status = "single"
                        },
                        new
                        {
                            personId = 2,
                            address = "262, Lac Long Quan",
                            dateOfBirth = new DateTime(2022, 12, 27, 20, 30, 22, 420, DateTimeKind.Local).AddTicks(3251),
                            email = "nbi6731@gmail.com",
                            firstName = "Lanh",
                            gender = "Male",
                            lastName = "Nguyen",
                            phone = "0911967483",
                            status = "single"
                        },
                        new
                        {
                            personId = 3,
                            address = "458, Nguyen Huu Tho",
                            dateOfBirth = new DateTime(2022, 12, 27, 20, 30, 22, 420, DateTimeKind.Local).AddTicks(3253),
                            email = "nbi9922@gmail.com",
                            firstName = "Bi",
                            gender = "Male",
                            lastName = "Nguyen",
                            phone = "0817559294",
                            status = "single"
                        });
                });

            modelBuilder.Entity("Final.Models.Product", b =>
                {
                    b.Property<int>("productId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("productId"));

                    b.Property<int>("categoryId")
                        .HasColumnType("int");

                    b.Property<decimal?>("price")
                        .IsRequired()
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("productName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("productId");

                    b.ToTable("Product");

                    b.HasData(
                        new
                        {
                            productId = 1,
                            categoryId = 1,
                            price = 20m,
                            productName = "lamboghini"
                        },
                        new
                        {
                            productId = 2,
                            categoryId = 2,
                            price = 30m,
                            productName = "ferrari"
                        },
                        new
                        {
                            productId = 3,
                            categoryId = 3,
                            price = 40m,
                            productName = "lamboghini"
                        });
                });

            modelBuilder.Entity("Final.Models.Product_Order", b =>
                {
                    b.Property<int>("orderId")
                        .HasColumnType("int");

                    b.Property<int>("productId")
                        .HasColumnType("int");

                    b.Property<string>("countingUnit")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("quantity")
                        .IsRequired()
                        .HasColumnType("int");

                    b.Property<decimal?>("total")
                        .IsRequired()
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("orderId", "productId");

                    b.HasIndex("productId");

                    b.ToTable("Product_Orders");

                    b.HasData(
                        new
                        {
                            orderId = 1,
                            productId = 1,
                            countingUnit = "chiec",
                            quantity = 10,
                            total = 100m
                        },
                        new
                        {
                            orderId = 2,
                            productId = 2,
                            countingUnit = "chiec",
                            quantity = 20,
                            total = 200m
                        },
                        new
                        {
                            orderId = 3,
                            productId = 3,
                            countingUnit = "chiec",
                            quantity = 30,
                            total = 300m
                        });
                });

            modelBuilder.Entity("Final.Models.Refund", b =>
                {
                    b.Property<int>("refundId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("refundId"));

                    b.Property<DateTime?>("createdAt")
                        .IsRequired()
                        .HasColumnType("datetime2");

                    b.Property<int>("orderId")
                        .HasColumnType("int");

                    b.Property<int>("productId")
                        .HasColumnType("int");

                    b.Property<string>("reason")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("refundId");

                    b.HasIndex("orderId");

                    b.HasIndex("productId");

                    b.ToTable("Refunds");

                    b.HasData(
                        new
                        {
                            refundId = 1,
                            createdAt = new DateTime(2022, 12, 27, 20, 30, 22, 420, DateTimeKind.Local).AddTicks(3281),
                            orderId = 1,
                            productId = 1,
                            reason = "Tai t thich"
                        },
                        new
                        {
                            refundId = 2,
                            createdAt = new DateTime(2022, 12, 27, 20, 30, 22, 420, DateTimeKind.Local).AddTicks(3283),
                            orderId = 2,
                            productId = 2,
                            reason = "Tai t thich duoc k?"
                        },
                        new
                        {
                            refundId = 3,
                            createdAt = new DateTime(2022, 12, 27, 20, 30, 22, 420, DateTimeKind.Local).AddTicks(3284),
                            orderId = 3,
                            productId = 3,
                            reason = "Tai t lai thich"
                        });
                });

            modelBuilder.Entity("Final.Models.RetailChain", b =>
                {
                    b.Property<int>("retailId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("retailId"));

                    b.Property<string>("address")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("retailId");

                    b.ToTable("RetailChains");

                    b.HasData(
                        new
                        {
                            retailId = 1,
                            address = "156, Duong 3/2",
                            name = "Retail1"
                        },
                        new
                        {
                            retailId = 2,
                            address = "326, Nguyen Tri Phuong",
                            name = "Retail2"
                        },
                        new
                        {
                            retailId = 3,
                            address = "221, Hoa Hao",
                            name = "Retail3"
                        });
                });

            modelBuilder.Entity("Final.Models.Staff", b =>
                {
                    b.Property<int>("staffId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("staffId"));

                    b.Property<int>("personId")
                        .HasColumnType("int");

                    b.HasKey("staffId");

                    b.HasIndex("personId");

                    b.ToTable("Staffs");

                    b.HasData(
                        new
                        {
                            staffId = 1,
                            personId = 1
                        },
                        new
                        {
                            staffId = 2,
                            personId = 2
                        },
                        new
                        {
                            staffId = 3,
                            personId = 3
                        });
                });

            modelBuilder.Entity("Final.Models.Supplier", b =>
                {
                    b.Property<int>("supplierId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("supplierId"));

                    b.Property<string>("name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("supplierId");

                    b.ToTable("Suppliers");

                    b.HasData(
                        new
                        {
                            supplierId = 1,
                            name = "Supplier1"
                        },
                        new
                        {
                            supplierId = 2,
                            name = "Supplier2"
                        },
                        new
                        {
                            supplierId = 3,
                            name = "Supplier3"
                        });
                });

            modelBuilder.Entity("Final.Models.Supplying", b =>
                {
                    b.Property<int>("supplyingId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("supplyingId"));

                    b.Property<int>("amount")
                        .HasColumnType("int");

                    b.Property<DateTime?>("arrivedAt")
                        .IsRequired()
                        .HasColumnType("datetime2");

                    b.Property<bool?>("hasArrived")
                        .IsRequired()
                        .HasColumnType("bit");

                    b.Property<DateTime?>("orderedAt")
                        .IsRequired()
                        .HasColumnType("datetime2");

                    b.Property<int>("productId")
                        .HasColumnType("int");

                    b.Property<int>("supplierId")
                        .HasColumnType("int");

                    b.HasKey("supplyingId");

                    b.HasIndex("productId");

                    b.HasIndex("supplierId");

                    b.ToTable("Supplyings");

                    b.HasData(
                        new
                        {
                            supplyingId = 1,
                            amount = 10,
                            arrivedAt = new DateTime(2022, 12, 27, 20, 30, 22, 420, DateTimeKind.Local).AddTicks(3311),
                            hasArrived = false,
                            orderedAt = new DateTime(2022, 12, 27, 20, 30, 22, 420, DateTimeKind.Local).AddTicks(3312),
                            productId = 1,
                            supplierId = 1
                        },
                        new
                        {
                            supplyingId = 2,
                            amount = 20,
                            arrivedAt = new DateTime(2022, 12, 27, 20, 30, 22, 420, DateTimeKind.Local).AddTicks(3313),
                            hasArrived = true,
                            orderedAt = new DateTime(2022, 12, 27, 20, 30, 22, 420, DateTimeKind.Local).AddTicks(3314),
                            productId = 2,
                            supplierId = 2
                        },
                        new
                        {
                            supplyingId = 3,
                            amount = 30,
                            arrivedAt = new DateTime(2022, 12, 27, 20, 30, 22, 420, DateTimeKind.Local).AddTicks(3315),
                            hasArrived = false,
                            orderedAt = new DateTime(2022, 12, 27, 20, 30, 22, 420, DateTimeKind.Local).AddTicks(3316),
                            productId = 3,
                            supplierId = 3
                        });
                });

            modelBuilder.Entity("Final.Models.Customer", b =>
                {
                    b.HasOne("Final.Models.Person", "Person")
                        .WithMany()
                        .HasForeignKey("personId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Person");
                });

            modelBuilder.Entity("Final.Models.EmployedAt", b =>
                {
                    b.HasOne("Final.Models.RetailChain", "RetailChain")
                        .WithMany()
                        .HasForeignKey("RetailChainretailId");

                    b.HasOne("Final.Models.Staff", "Staff")
                        .WithMany()
                        .HasForeignKey("staffId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("RetailChain");

                    b.Navigation("Staff");
                });

            modelBuilder.Entity("Final.Models.Inventory", b =>
                {
                    b.HasOne("Final.Models.Product", "Product")
                        .WithMany()
                        .HasForeignKey("productId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Product");
                });

            modelBuilder.Entity("Final.Models.Order", b =>
                {
                    b.HasOne("Final.Models.Person", "Person")
                        .WithMany()
                        .HasForeignKey("personId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Person");
                });

            modelBuilder.Entity("Final.Models.Product_Order", b =>
                {
                    b.HasOne("Final.Models.Order", "Order")
                        .WithMany()
                        .HasForeignKey("orderId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Final.Models.Product", "Product")
                        .WithMany()
                        .HasForeignKey("productId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Order");

                    b.Navigation("Product");
                });

            modelBuilder.Entity("Final.Models.Refund", b =>
                {
                    b.HasOne("Final.Models.Order", "Order")
                        .WithMany()
                        .HasForeignKey("orderId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Final.Models.Product", "Product")
                        .WithMany()
                        .HasForeignKey("productId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Order");

                    b.Navigation("Product");
                });

            modelBuilder.Entity("Final.Models.Staff", b =>
                {
                    b.HasOne("Final.Models.Person", "Person")
                        .WithMany()
                        .HasForeignKey("personId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Person");
                });

            modelBuilder.Entity("Final.Models.Supplying", b =>
                {
                    b.HasOne("Final.Models.Product", "Product")
                        .WithMany()
                        .HasForeignKey("productId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Final.Models.Supplier", "Supplier")
                        .WithMany()
                        .HasForeignKey("supplierId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Product");

                    b.Navigation("Supplier");
                });
#pragma warning restore 612, 618
        }
    }
}
